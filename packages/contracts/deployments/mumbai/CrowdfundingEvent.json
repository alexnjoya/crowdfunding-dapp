{
  "address": "0x28E3586d47C8f8A3562f04869d40c82D0a929D59",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughBalanceOrApproval",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotWhitelistedToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawFail",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "whitelist",
          "type": "bool"
        }
      ],
      "name": "WhitelistToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        }
      ],
      "name": "setCampaignTitle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "title",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_whitelist",
          "type": "bool"
        }
      ],
      "name": "whitelistERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5253fb4294b2afba85020ce7a256811fb337c189875fada037f428191c2c16bb",
  "receipt": {
    "to": null,
    "from": "0x656A2999D0D294705891F546d6753c53aC7f40d5",
    "contractAddress": "0x28E3586d47C8f8A3562f04869d40c82D0a929D59",
    "transactionIndex": 1,
    "gasUsed": "773496",
    "logsBloom": "0x
    "blockHash": "0x47aaf62b872bf47687d8b1b17aac5b0f50805d72638aa3a074a438bf8f174bba",
    "transactionHash": "0x5253fb4294b2afba85020ce7a256811fb337c189875fada037f428191c2c16bb",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 30702367,
        "transactionHash": "0x5253fb4294b2afba85020ce7a256811fb337c189875fada037f428191c2c16bb",
        "address": "0x28E3586d47C8f8A3562f04869d40c82D0a929D59",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000656a2999d0d294705891f546d6753c53ac7f40d5"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x47aaf62b872bf47687d8b1b17aac5b0f50805d72638aa3a074a438bf8f174bba"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 30702367,
        "transactionHash": "0x5253fb4294b2afba85020ce7a256811fb337c189875fada037f428191c2c16bb",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000656a2999d0d294705891f546d6753c53ac7f40d5",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000041f3c5c2a120800000000000000000000000000000000000000000000000002315278c19d94680000000000000000000000000000000000000000000018d20a5c65ef59bcf16b000000000000000000000000000000000000000000000000022d333c657382600000000000000000000000000000000000000000000018d20a60852bb5e70373",
        "logIndex": 3,
        "blockHash": "0x47aaf62b872bf47687d8b1b17aac5b0f50805d72638aa3a074a438bf8f174bba"
      }
    ],
    "blockNumber": 30702367,
    "cumulativeGasUsed": "794496",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8ceb0ea3e0c2b59e892045d86fe4f90a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughBalanceOrApproval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelistedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawFail\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"whitelist\",\"type\":\"bool\"}],\"name\":\"WhitelistToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"}],\"name\":\"setCampaignTitle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_whitelist\",\"type\":\"bool\"}],\"name\":\"whitelistERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CrowdfundingEvent.sol\":\"CrowdfundingEvent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/CrowdfundingEvent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract CrowdfundingEvent is Ownable {\\n  string public title;\\n  mapping(address => bool) public tokenWhitelist;\\n\\n  error InvalidToken();\\n  error NotEnoughAmount();\\n  error NotEnoughBalanceOrApproval();\\n  error NotWhitelistedToken();\\n  error WithdrawFail();\\n\\n  event Deposit(address indexed user, address indexed token, uint256 indexed amount);\\n  event Withdraw(address indexed token, uint256 indexed amount);\\n  event WhitelistToken(address indexed token, bool indexed whitelist);\\n\\n  function depositERC20(address _token, uint256 _amount) external {\\n    if (_token == address(0)) {\\n      revert InvalidToken();\\n    }\\n\\n    if (tokenWhitelist[_token] == false) {\\n      revert NotWhitelistedToken();\\n    }\\n\\n    IERC20 token = IERC20(_token);\\n    bool success = token.transferFrom(msg.sender, address(this), _amount);\\n\\n    if (!success) {\\n      revert NotEnoughBalanceOrApproval();\\n    }\\n\\n    emit Deposit(msg.sender, _token, _amount);\\n  }\\n\\n  function deposit() external payable {\\n    if (msg.value == 0) {\\n      revert NotEnoughAmount();\\n    }\\n\\n    emit Deposit(msg.sender, address(0), msg.value);\\n  }\\n\\n  function withdraw(address _token) external onlyOwner {\\n    bool sent;\\n    uint256 amount;\\n    if (_token == address(0)) {\\n      amount = address(this).balance;\\n      (sent, ) = payable(owner()).call{value: amount}(\\\"\\\");\\n    } else {\\n      IERC20 token = IERC20(_token);\\n      amount = token.balanceOf(address(this));\\n      sent = token.transfer(owner(), amount);\\n    }\\n\\n    if (!sent) {\\n      revert WithdrawFail();\\n    }\\n\\n    emit Withdraw(_token, amount);\\n  }\\n\\n  function whitelistERC20(address _token, bool _whitelist) external onlyOwner {\\n    tokenWhitelist[_token] = _whitelist;\\n\\n    emit WhitelistToken(_token, _whitelist);\\n  }\\n\\n  function setCampaignTitle(string memory _title) external onlyOwner {\\n    title = _title;\\n  }\\n}\\n\",\"keccak256\":\"0xc6cf79a47da560bda29efd19309ca3d342e9ced4232304bc0c60de8da7e20c47\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ca88061007e6000396000f3fe6080604052600436106100b15760003560e01c806397feb92611610069578063c39569521161004e578063c3956952146101c0578063d0e30db0146101e0578063f2fde38b146101e857600080fd5b806397feb92614610180578063c3306450146101a057600080fd5b8063715018a61161009a578063715018a614610103578063753d7563146101185780638da5cb5b1461015857600080fd5b80634a79d50c146100b657806351cff8d9146100e1575b600080fd5b3480156100c257600080fd5b506100cb610208565b6040516100d891906108ff565b60405180910390f35b3480156100ed57600080fd5b506101016100fc366004610969565b610296565b005b34801561010f57600080fd5b506101016104c1565b34801561012457600080fd5b50610148610133366004610969565b60026020526000908152604090205460ff1681565b60405190151581526020016100d8565b34801561016457600080fd5b506000546040516001600160a01b0390911681526020016100d8565b34801561018c57600080fd5b5061010161019b36600461098b565b6104d5565b3480156101ac57600080fd5b506101016101bb3660046109e4565b610677565b3480156101cc57600080fd5b506101016101db366004610aa3565b61068f565b610101610709565b3480156101f457600080fd5b50610101610203366004610969565b610774565b6001805461021590610ada565b80601f016020809104026020016040519081016040528092919081815260200182805461024190610ada565b801561028e5780601f106102635761010080835404028352916020019161028e565b820191906000526020600020905b81548152906001019060200180831161027157829003601f168201915b505050505081565b61029e610823565b6000806001600160a01b03831661031d5750476102c36000546001600160a01b031690565b6001600160a01b03168160405160006040518083038185875af1925050503d806000811461030d576040519150601f19603f3d011682016040523d82523d6000602084013e610312565b606091505b505080925050610450565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015283906001600160a01b038216906370a0823190602401602060405180830381865afa15801561037c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a09190610b2d565b9150806001600160a01b031663a9059cbb6103c36000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044c9190610b46565b9250505b81610486576040517ec0f29900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405181906001600160a01b038516907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436490600090a3505050565b6104c9610823565b6104d36000610897565b565b6001600160a01b038216610515576040517fc1ab6dc100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821660009081526002602052604081205460ff161515900361056b576040517f65a9cebb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810182905282906000906001600160a01b038316906323b872dd906064016020604051808303816000875af11580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190610b46565b905080610639576040517f53ce622b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405183906001600160a01b0386169033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6290600090a450505050565b61067f610823565b600161068b8282610bb2565b5050565b610697610823565b6001600160a01b03821660008181526002602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915590519092917f06a27d2e85b249c0d83da8b892fb8e69167e1319fb3bb86f860b245f9e0d729f91a35050565b34600003610743576040517fe008b5f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051349060009033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62908390a4565b61077c610823565b6001600160a01b038116610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61082081610897565b50565b6000546001600160a01b031633146104d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161080e565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b8181101561092c57858101830151858201604001528201610910565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461096457600080fd5b919050565b60006020828403121561097b57600080fd5b6109848261094d565b9392505050565b6000806040838503121561099e57600080fd5b6109a78361094d565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156109f657600080fd5b813567ffffffffffffffff80821115610a0e57600080fd5b818401915084601f830112610a2257600080fd5b813581811115610a3457610a346109b5565b604051601f8201601f19908116603f01168101908382118183101715610a5c57610a5c6109b5565b81604052828152876020848701011115610a7557600080fd5b826020860160208301376000928101602001929092525095945050505050565b801515811461082057600080fd5b60008060408385031215610ab657600080fd5b610abf8361094d565b91506020830135610acf81610a95565b809150509250929050565b600181811c90821680610aee57607f821691505b602082108103610b27577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215610b3f57600080fd5b5051919050565b600060208284031215610b5857600080fd5b815161098481610a95565b601f821115610bad57600081815260208120601f850160051c81016020861015610b8a5750805b601f850160051c820191505b81811015610ba957828155600101610b96565b5050505b505050565b815167ffffffffffffffff811115610bcc57610bcc6109b5565b610be081610bda8454610ada565b84610b63565b602080601f831160018114610c155760008415610bfd5750858301515b600019600386901b1c1916600185901b178555610ba9565b600085815260208120601f198616915b82811015610c4457888601518255948401946001909101908401610c25565b5085821015610c625787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122007275351b20e84f3d6c03e8b5944b4a31c2208d4663f44709c79eaba7445f04d64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100b15760003560e01c806397feb92611610069578063c39569521161004e578063c3956952146101c0578063d0e30db0146101e0578063f2fde38b146101e857600080fd5b806397feb92614610180578063c3306450146101a057600080fd5b8063715018a61161009a578063715018a614610103578063753d7563146101185780638da5cb5b1461015857600080fd5b80634a79d50c146100b657806351cff8d9146100e1575b600080fd5b3480156100c257600080fd5b506100cb610208565b6040516100d891906108ff565b60405180910390f35b3480156100ed57600080fd5b506101016100fc366004610969565b610296565b005b34801561010f57600080fd5b506101016104c1565b34801561012457600080fd5b50610148610133366004610969565b60026020526000908152604090205460ff1681565b60405190151581526020016100d8565b34801561016457600080fd5b506000546040516001600160a01b0390911681526020016100d8565b34801561018c57600080fd5b5061010161019b36600461098b565b6104d5565b3480156101ac57600080fd5b506101016101bb3660046109e4565b610677565b3480156101cc57600080fd5b506101016101db366004610aa3565b61068f565b610101610709565b3480156101f457600080fd5b50610101610203366004610969565b610774565b6001805461021590610ada565b80601f016020809104026020016040519081016040528092919081815260200182805461024190610ada565b801561028e5780601f106102635761010080835404028352916020019161028e565b820191906000526020600020905b81548152906001019060200180831161027157829003601f168201915b505050505081565b61029e610823565b6000806001600160a01b03831661031d5750476102c36000546001600160a01b031690565b6001600160a01b03168160405160006040518083038185875af1925050503d806000811461030d576040519150601f19603f3d011682016040523d82523d6000602084013e610312565b606091505b505080925050610450565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015283906001600160a01b038216906370a0823190602401602060405180830381865afa15801561037c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a09190610b2d565b9150806001600160a01b031663a9059cbb6103c36000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044c9190610b46565b9250505b81610486576040517ec0f29900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405181906001600160a01b038516907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436490600090a3505050565b6104c9610823565b6104d36000610897565b565b6001600160a01b038216610515576040517fc1ab6dc100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821660009081526002602052604081205460ff161515900361056b576040517f65a9cebb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810182905282906000906001600160a01b038316906323b872dd906064016020604051808303816000875af11580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190610b46565b905080610639576040517f53ce622b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405183906001600160a01b0386169033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6290600090a450505050565b61067f610823565b600161068b8282610bb2565b5050565b610697610823565b6001600160a01b03821660008181526002602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915590519092917f06a27d2e85b249c0d83da8b892fb8e69167e1319fb3bb86f860b245f9e0d729f91a35050565b34600003610743576040517fe008b5f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051349060009033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62908390a4565b61077c610823565b6001600160a01b038116610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61082081610897565b50565b6000546001600160a01b031633146104d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161080e565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b8181101561092c57858101830151858201604001528201610910565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461096457600080fd5b919050565b60006020828403121561097b57600080fd5b6109848261094d565b9392505050565b6000806040838503121561099e57600080fd5b6109a78361094d565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156109f657600080fd5b813567ffffffffffffffff80821115610a0e57600080fd5b818401915084601f830112610a2257600080fd5b813581811115610a3457610a346109b5565b604051601f8201601f19908116603f01168101908382118183101715610a5c57610a5c6109b5565b81604052828152876020848701011115610a7557600080fd5b826020860160208301376000928101602001929092525095945050505050565b801515811461082057600080fd5b60008060408385031215610ab657600080fd5b610abf8361094d565b91506020830135610acf81610a95565b809150509250929050565b600181811c90821680610aee57607f821691505b602082108103610b27577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215610b3f57600080fd5b5051919050565b600060208284031215610b5857600080fd5b815161098481610a95565b601f821115610bad57600081815260208120601f850160051c81016020861015610b8a5750805b601f850160051c820191505b81811015610ba957828155600101610b96565b5050505b505050565b815167ffffffffffffffff811115610bcc57610bcc6109b5565b610be081610bda8454610ada565b84610b63565b602080601f831160018114610c155760008415610bfd5750858301515b600019600386901b1c1916600185901b178555610ba9565b600085815260208120601f198616915b82811015610c4457888601518255948401946001909101908401610c25565b5085821015610c625787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122007275351b20e84f3d6c03e8b5944b4a31c2208d4663f44709c79eaba7445f04d64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/CrowdfundingEvent.sol:CrowdfundingEvent",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 220,
        "contract": "src/CrowdfundingEvent.sol:CrowdfundingEvent",
        "label": "title",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 224,
        "contract": "src/CrowdfundingEvent.sol:CrowdfundingEvent",
        "label": "tokenWhitelist",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}